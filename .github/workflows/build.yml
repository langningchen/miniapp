# Copyright (C) 2025 Langning Chen
# 
# This file is part of miniapp.
# 
# miniapp is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# miniapp is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with miniapp.  If not, see <https://www.gnu.org/licenses/>.

name: Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    
permissions:
  id-token: write
  attestations: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.20.0'

      - name: Build JSAPI library
        working-directory: jsapi
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
          make install
          
      - name: Copy JSAPI library to UI libs
        run: |
          mkdir -p ui/libs
          cp jsapi/build/libs/libjsapi_langningchen.so ui/libs/
          
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          cache-dependency-path: 'ui/pnpm-lock.yaml'
      - name: Install dependencies
        working-directory: ui
        run: pnpm install

      - name: Modify the library
        working-directory: ui
        run: |
          sed -i "s/commonjs(),/commonjs(),require('@rollup\/plugin-typescript')(),/g" ./node_modules/aiot-vue-cli/src/libs/rollup.config.js
          sed -i "s/compiler.parseComponent(content, { pad: 'line' })/compiler.parse(content, { pad: 'line' }).descriptor/g" ./node_modules/aiot-vue-cli/web-loaders/falcon-vue-loader/lib/parser.js
          sed -i "s/path.resolve(__dirname, '.\/vue\/packages\/vue-template-compiler\/index.js')/'@vue\/compiler-sfc'/g" ./node_modules/aiot-vue-cli/cli-libs/index.js
          sed -i "s/compiler.parseComponent(content, { pad: true })/compiler.parse(content, { pad: true }).descriptor/g" ./node_modules/aiot-vue-cli/src/libs/parser.js
          sed -i "s/compiler.compile/compiler.compileTemplate/g" ./node_modules/aiot-vue-cli/web-loaders/falcon-vue-loader/lib/template-compiler/index.js
          sed -i "s/const replaceValues = {}/const replaceValues = { 'defineComponent': '' }/g" ./node_modules/aiot-vue-cli/src/libs/rollup.config.js

      - name: Build UI
        working-directory: ui
        run: pnpm package

      - name: Upload artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          path: ui/*.amr
          name: miniapp.amr
          
      - name: Upload JSAPI library
        uses: actions/upload-artifact@v4
        with:
          path: jsapi/build/libs/libjsapi_langningchen.so
          name: jsapi-library
          
      - uses: actions/attest-build-provenance@v2
        with:
          subject-name: miniapp.amr
          subject-digest: sha256:${{ steps.upload.outputs.artifact-digest }}
